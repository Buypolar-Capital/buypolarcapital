ggplot(aes(x = date, y = close)) +
geom_line() +
labs(title = "AAPL Close Price") +
theme_minimal()
# AAPL Return Plot (365-day lag)
p_aapl_return <- aapl %>%
mutate(return = close / lag(close, 365)) %>%
select(date, return) %>%
ggplot(aes(x = date, y = return)) +
geom_line() +
geom_hline(yintercept = 1, lty = "dashed") +
labs(title = "AAPL ~365-Day Rolling Return") +
theme_classic()
# AAPL Return Plot (365-day lag)
p_aapl_return_day <- aapl %>%
mutate(return = close / lag(close, 1)) %>%
select(date, return) %>%
ggplot(aes(x = date, y = return)) +
geom_line() +
geom_hline(yintercept = 1, lty = "dashed") +
labs(title = "AAPL ~365-Day Rolling Return") +
theme_classic()
# EXPORT AAPL Return Plot
ggsave("plots/aapl_return.pdf", p_aapl_return, width = 9, height = 5)
ggsave("plots/aapl_return_day.pdf", p_aapl_return_day, width = 9, height = 5)
ggsave("plots/aapl_price.pdf", p_aapl_price, width = 9, height = 5)
# --- DOWNLOAD TSLA ---
tsla <- tq_get("TSLA",
from = "2000-01-01",
to   = "2025-01-01",
get  = "stock.prices")
# TSLA Price Plot
p_tsla_price <- tsla %>%
ggplot(aes(x = date, y = close)) +
geom_line() +
labs(title = "TSLA Close Price") +
theme_minimal()
# TSLA Return Plot (365-day lag)
p_tsla_return <- tsla %>%
mutate(return = close / lag(close, 365)) %>%
select(date, return) %>%
ggplot(aes(x = date, y = return)) +
geom_line() +
geom_hline(yintercept = 1, lty = "dashed") +
labs(title = "TSLA ~365-Day Rolling Return") +
theme_classic()
# TSLA Return Plot (365-day lag)
p_tsla_return_day <- tsla %>%
mutate(return = close / lag(close, 1)) %>%
select(date, return) %>%
ggplot(aes(x = date, y = return)) +
geom_line() +
geom_hline(yintercept = 1, lty = "dashed") +
labs(title = "TSLA ~365-Day Rolling Return") +
theme_classic()
# EXPORT TSLA Return Plot
ggsave("plots/tsla_return.pdf", p_tsla_return, width = 9, height = 5)
ggsave("plots/tsla_return_day.pdf", p_tsla_return_day, width = 9, height = 5)
ggsave("plots/tsla_price.pdf", p_tsla_price, width = 9, height = 5)
# DONE
cat("✅ Exported AAPL and TSLA plots as PDFs to 'plots/' folder.\n")
# LOAD LIBRARIES
library(tidyquant)
library(tidyverse)
# CREATE FOLDER IF NOT EXISTS
if (!dir.exists("plots")) dir.create("plots")
# --- DOWNLOAD AAPL ---
aapl <- tq_get("AAPL",
from = "2015-01-01",
to   = "2025-01-01",
get  = "stock.prices")
# AAPL Price Plot
p_aapl_price <- aapl %>%
ggplot(aes(x = date, y = close)) +
geom_line() +
labs(title = "AAPL Close Price") +
theme_minimal()
# AAPL Return Plot (365-day lag)
p_aapl_return <- aapl %>%
mutate(return = close / lag(close, 365)) %>%
select(date, return) %>%
ggplot(aes(x = date, y = return)) +
geom_line() +
geom_hline(yintercept = 1, lty = "dashed") +
labs(title = "AAPL ~365-Day Rolling Return") +
theme_classic()
# AAPL Return Plot (365-day lag)
p_aapl_return_day <- aapl %>%
mutate(return = close / lag(close, 1)) %>%
select(date, return) %>%
ggplot(aes(x = date, y = return)) +
geom_line() +
geom_hline(yintercept = 1, lty = "dashed") +
labs(title = "AAPL ~1-Day Rolling Return") +
theme_classic()
# EXPORT AAPL Return Plot
ggsave("plots/aapl_return.pdf", p_aapl_return, width = 9, height = 5)
ggsave("plots/aapl_return_day.pdf", p_aapl_return_day, width = 9, height = 5)
ggsave("plots/aapl_price.pdf", p_aapl_price, width = 9, height = 5)
# --- DOWNLOAD TSLA ---
tsla <- tq_get("TSLA",
from = "2000-01-01",
to   = "2025-01-01",
get  = "stock.prices")
# TSLA Price Plot
p_tsla_price <- tsla %>%
ggplot(aes(x = date, y = close)) +
geom_line() +
labs(title = "TSLA Close Price") +
theme_minimal()
# TSLA Return Plot (365-day lag)
p_tsla_return <- tsla %>%
mutate(return = close / lag(close, 365)) %>%
select(date, return) %>%
ggplot(aes(x = date, y = return)) +
geom_line() +
geom_hline(yintercept = 1, lty = "dashed") +
labs(title = "TSLA ~365-Day Rolling Return") +
theme_classic()
# TSLA Return Plot (365-day lag)
p_tsla_return_day <- tsla %>%
mutate(return = close / lag(close, 1)) %>%
select(date, return) %>%
ggplot(aes(x = date, y = return)) +
geom_line() +
geom_hline(yintercept = 1, lty = "dashed") +
labs(title = "TSLA ~1-Day Rolling Return") +
theme_classic()
# EXPORT TSLA Return Plot
ggsave("plots/tsla_return.pdf", p_tsla_return, width = 9, height = 5)
ggsave("plots/tsla_return_day.pdf", p_tsla_return_day, width = 9, height = 5)
ggsave("plots/tsla_price.pdf", p_tsla_price, width = 9, height = 5)
# DONE
cat("✅ Exported AAPL and TSLA plots as PDFs to 'plots/' folder.\n")
# INSTALL IF NEEDED
library(tidyquant)
library(tidyverse)
library(lubridate)
# DEFINE STOCKS + TIME FRAME
tickers <- c("AMZN", "TSLA", "NVDA", "META", "MRNA", "BNTX", "XOM", "AAL",
"BAC", "GS", "GME", "COIN", "NFLX", "CRM", "AMD", "INTC")
start_date <- "1999-01-01"
end_date <- "2025-01-01"
# DOWNLOAD ALL STOCKS
stocks_raw <- tq_get(tickers,
from = start_date,
to   = end_date,
get  = "stock.prices")
# CALCULATE LAG-1 RETURN
stocks_returns <- stocks_raw %>%
group_by(symbol) %>%
arrange(date) %>%
mutate(return = close / lag(close, 1)) %>%
ungroup()
# RECESSION PERIODS
recessions <- tibble(
start = as.Date(c("2000-03-01", "2007-10-01", "2020-02-01")),
end   = as.Date(c("2002-10-01", "2009-06-01", "2020-05-01")),
label = c("Tech Bubble", "Financial Crisis", "COVID-19")
)
# PLOT
p <- ggplot(stocks_returns, aes(x = date, y = return)) +
geom_rect(data = recessions,
aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, fill = label),
inherit.aes = FALSE, alpha = 0.2) +
geom_line(color = "black", size = 0.3) +
facet_wrap(~symbol, scales = "free_y", ncol = 4) +
scale_fill_manual(values = c("Tech Bubble" = "red",
"Financial Crisis" = "blue",
"COVID-19" = "green")) +
labs(title = "Lag-1 Daily Returns of 16 Volatile Stocks (1999–2025)",
y = "Return (Close / Lag 1)",
x = "Date",
fill = "Recession Period") +
theme_minimal(base_size = 10) +
theme(strip.text = element_text(face = "bold"))
# OUTPUT TO SCREEN
print(p)
# EXPORT TO PDF
if (!dir.exists("plots")) dir.create("plots")
ggsave("plots/volatile_stocks_lag1_return_facet.pdf", p, width = 14, height = 10)
cat("✅ Faceted return plot saved to: plots/volatile_stocks_lag1_return_facet.pdf\n")
setwd("C:/Users/ofurn/Dokumenter/Github/buypolarcapital/risk-management/R")
setwd("C:/Users/ofurn/Dokumenter/Github/buypolarcapital/risk-management/R")
# INSTALL IF NEEDED
library(tidyquant)
library(tidyverse)
library(lubridate)
# DEFINE STOCKS + TIME FRAME
tickers <- c("AMZN", "TSLA", "NVDA", "META", "MRNA", "BNTX", "XOM", "AAL",
"BAC", "GS", "GME", "COIN", "NFLX", "CRM", "AMD", "INTC")
start_date <- "1999-01-01"
end_date <- "2025-01-01"
# DOWNLOAD ALL STOCKS
stocks_raw <- tq_get(tickers,
from = start_date,
to   = end_date,
get  = "stock.prices")
# CALCULATE LAG-1 RETURN
stocks_returns <- stocks_raw %>%
group_by(symbol) %>%
arrange(date) %>%
mutate(return = close / lag(close, 1)) %>%
ungroup()
# RECESSION PERIODS
recessions <- tibble(
start = as.Date(c("2000-03-01", "2007-10-01", "2020-02-01")),
end   = as.Date(c("2002-10-01", "2009-06-01", "2020-05-01")),
label = c("Tech Bubble", "Financial Crisis", "COVID-19")
)
# PLOT
p <- ggplot(stocks_returns, aes(x = date, y = return)) +
geom_rect(data = recessions,
aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, fill = label),
inherit.aes = FALSE, alpha = 0.2) +
geom_line(color = "black", size = 0.3) +
facet_wrap(~symbol, scales = "free_y", ncol = 4) +
scale_fill_manual(values = c("Tech Bubble" = "red",
"Financial Crisis" = "blue",
"COVID-19" = "green")) +
labs(title = "Lag-1 Daily Returns of 16 Volatile Stocks (1999–2025)",
y = "Return (Close / Lag 1)",
x = "Date",
fill = "Recession Period") +
theme_minimal(base_size = 10) +
theme(strip.text = element_text(face = "bold"))
# OUTPUT TO SCREEN
print(p)
# EXPORT TO PDF
if (!dir.exists("plots")) dir.create("plots")
ggsave("plots/volatile_stocks_lag1_return_facet.pdf", p, width = 14, height = 10)
cat("✅ Faceted return plot saved to: plots/volatile_stocks_lag1_return_facet.pdf\n")
# INSTALL if needed
library(tidyquant)
library(tidyverse)
library(lubridate)
library(gridExtra)
# SELECT 32 long-listed volatile stocks
tickers <- c(
"AAPL", "MSFT", "NVDA", "AMD", "INTC", "MU", "TXN", "IBM",
"AMZN", "META", "NFLX", "GOOGL", "ORCL", "EBAY", "QCOM", "CRM",
"JPM", "GS", "MS", "BAC", "C", "AXP", "USB", "WFC",
"GE", "BA", "CAT", "F", "GM", "UPS", "HON", "LMT"
)
start_date <- "2000-01-01"
end_date <- "2025-01-01"
# DOWNLOAD PRICE DATA
stock_data <- tq_get(tickers,
from = start_date,
to   = end_date,
get = "stock.prices")
# CALCULATE DAILY LAG-1 RETURNS
returns_data <- stock_data %>%
group_by(symbol) %>%
arrange(date) %>%
mutate(return = close / lag(close, 1)) %>%
ungroup()
# DEFINE RECESSIONS
recessions <- tibble(
start = as.Date(c("2000-03-01", "2007-10-01", "2020-02-01")),
end   = as.Date(c("2002-10-01", "2009-06-01", "2020-05-01")),
label = c("Tech Bubble", "Financial Crisis", "COVID-19")
)
# SPLIT INTO GROUPS OF 4 STOCKS EACH (2x2 FACETS)
stock_groups <- split(unique(returns_data$symbol), ceiling(seq_along(unique(returns_data$symbol))/4))
# MAKE PLOTS FOR EACH GROUP
plots <- map(stock_groups, function(group_syms) {
returns_data %>%
filter(symbol %in% group_syms) %>%
ggplot(aes(x = date, y = return)) +
geom_rect(data = recessions,
aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, fill = label),
inherit.aes = FALSE, alpha = 0.2) +
geom_line(color = "black", size = 0.3) +
facet_wrap(~symbol, ncol = 2, scales = "free_y") +
scale_fill_manual(values = c("Tech Bubble" = "red", "Financial Crisis" = "blue", "COVID-19" = "green")) +
labs(title = "Lag-1 Return (Daily)",
subtitle = paste("Stocks:", paste(group_syms, collapse = ", ")),
y = "Return (Close / Lag 1)", x = "Date", fill = "Recession") +
theme_minimal(base_size = 10) +
theme(strip.text = element_text(face = "bold"))
})
# EXPORT MULTI-PAGE PDF
if (!dir.exists("plots")) dir.create("plots")
pdf("plots/volatile_stocks_32_multipage_2x2.pdf", width = 11, height = 8.5)  # landscape A4
walk(plots, print)
dev.off()
cat("✅ Exported multi-page 2x2 PDF to 'plots/volatile_stocks_32_multipage_2x2.pdf'\n")
# INSTALL IF NEEDED
library(tidyquant)
library(tidyverse)
library(lubridate)
library(gridExtra)
# --- TICKERS ---
shipping_tickers <- c("FRO", "GOGL", "STNG", "DHT", "EURN", "ZIM", "MATX", "CL=F")  # CL=F is Crude Oil
start_date <- "2005-01-01"  # To catch 2008 crisis and forward
end_date <- "2025-01-01"
# --- DOWNLOAD DATA ---
shipping_data <- tq_get(shipping_tickers,
from = start_date,
to   = end_date,
get  = "stock.prices")
# --- CALCULATE LAG-1 RETURN ---
shipping_returns <- shipping_data %>%
group_by(symbol) %>%
arrange(date) %>%
mutate(return = close / lag(close, 1)) %>%
ungroup()
# --- RECESSION PERIODS ---
recessions <- tibble(
start = as.Date(c("2007-10-01", "2020-02-01")),
end   = as.Date(c("2009-06-01", "2020-05-01")),
label = c("Financial Crisis", "COVID-19")
)
# --- SPLIT INTO 2x2 PLOTS PER PAGE ---
grouped_syms <- split(unique(shipping_returns$symbol), ceiling(seq_along(unique(shipping_returns$symbol))/4))
plots <- map(grouped_syms, function(group_syms) {
shipping_returns %>%
filter(symbol %in% group_syms) %>%
ggplot(aes(x = date, y = return)) +
geom_rect(data = recessions,
aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, fill = label),
inherit.aes = FALSE, alpha = 0.2) +
geom_line(color = "black", size = 0.3) +
facet_wrap(~symbol, ncol = 2, scales = "free_y") +
scale_fill_manual(values = c("Financial Crisis" = "blue", "COVID-19" = "green")) +
labs(title = "Lag-1 Return of Shipping Companies & Oil",
subtitle = paste("Symbols:", paste(group_syms, collapse = ", ")),
y = "Return (Close / Lag 1)", x = "Date", fill = "Recession") +
theme_minimal(base_size = 10) +
theme(strip.text = element_text(face = "bold"))
})
# --- EXPORT PDF ---
if (!dir.exists("plots")) dir.create("plots")
pdf("plots/shipping_sector_multipage_2x2.pdf", width = 11, height = 8.5)
walk(plots, print)
dev.off()
cat("✅ Shipping sector report saved: plots/shipping_sector_multipage_2x2.pdf\n")
setwd("C:/Users/ofurn/Dokumenter/Github/buypolarcapital/shipping/R")
# INSTALL IF NEEDED
library(tidyquant)
library(tidyverse)
library(lubridate)
library(gridExtra)
# --- TICKERS ---
shipping_tickers <- c("FRO", "GOGL", "STNG", "DHT", "EURN", "ZIM", "MATX", "CL=F")  # CL=F is Crude Oil
start_date <- "2005-01-01"  # To catch 2008 crisis and forward
end_date <- "2025-01-01"
# --- DOWNLOAD DATA ---
shipping_data <- tq_get(shipping_tickers,
from = start_date,
to   = end_date,
get  = "stock.prices")
# --- CALCULATE LAG-1 RETURN ---
shipping_returns <- shipping_data %>%
group_by(symbol) %>%
arrange(date) %>%
mutate(return = close / lag(close, 1)) %>%
ungroup()
# --- RECESSION PERIODS ---
recessions <- tibble(
start = as.Date(c("2007-10-01", "2020-02-01")),
end   = as.Date(c("2009-06-01", "2020-05-01")),
label = c("Financial Crisis", "COVID-19")
)
# --- SPLIT INTO 2x2 PLOTS PER PAGE ---
grouped_syms <- split(unique(shipping_returns$symbol), ceiling(seq_along(unique(shipping_returns$symbol))/4))
plots <- map(grouped_syms, function(group_syms) {
shipping_returns %>%
filter(symbol %in% group_syms) %>%
ggplot(aes(x = date, y = return)) +
geom_rect(data = recessions,
aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, fill = label),
inherit.aes = FALSE, alpha = 0.2) +
geom_line(color = "black", size = 0.3) +
facet_wrap(~symbol, ncol = 2, scales = "free_y") +
scale_fill_manual(values = c("Financial Crisis" = "blue", "COVID-19" = "green")) +
labs(title = "Lag-1 Return of Shipping Companies & Oil",
subtitle = paste("Symbols:", paste(group_syms, collapse = ", ")),
y = "Return (Close / Lag 1)", x = "Date", fill = "Recession") +
theme_minimal(base_size = 10) +
theme(strip.text = element_text(face = "bold"))
})
# --- EXPORT PDF ---
if (!dir.exists("plots")) dir.create("plots")
pdf("plots/shipping_sector_multipage_2x2.pdf", width = 11, height = 8.5)
walk(plots, print)
dev.off()
cat("✅ Shipping sector report saved: plots/shipping_sector_multipage_2x2.pdf\n")
# INSTALL IF NEEDED
library(tidyquant)
library(tidyverse)
library(lubridate)
library(gridExtra)
library(ggcorrplot)
# INSTALL IF NEEDED
library(tidyquant)
library(tidyverse)
library(lubridate)
library(gridExtra)
library(ggcorrplot)
library(zoo)
# --- PARAMETERS ---
tickers <- c("FRO", "GOGL", "STNG", "DHT", "EURN", "ZIM", "MATX", "CL=F")  # CL=F = Oil
commodities <- c("CL=F", "KOL", "PICK")  # Oil, Coal ETF, Metals/Mining ETF
start_date <- "2005-01-01"
end_date <- "2025-01-01"
# --- DOWNLOAD DATA ---
all_data <- tq_get(unique(c(tickers, commodities)),
from = start_date,
to   = end_date,
get = "stock.prices")
# --- DAILY LAG-1 RETURN ---
returns_data <- all_data %>%
group_by(symbol) %>%
arrange(date) %>%
mutate(return = close / lag(close, 1),
log_return = log(close / lag(close))) %>%
ungroup()
# --- RECESSION PERIODS ---
recessions <- tibble(
start = as.Date(c("2007-10-01", "2020-02-01")),
end   = as.Date(c("2009-06-01", "2020-05-01")),
label = c("Financial Crisis", "COVID-19")
)
# --- PAGE 1: 2x2 FACET RETURN PLOTS ---
grouped_syms <- split(tickers, ceiling(seq_along(tickers)/4))
plots1 <- map(grouped_syms, function(group_syms) {
returns_data %>%
filter(symbol %in% group_syms) %>%
ggplot(aes(x = date, y = return)) +
geom_rect(data = recessions,
aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, fill = label),
inherit.aes = FALSE, alpha = 0.2) +
geom_line(size = 0.3) +
facet_wrap(~symbol, ncol = 2, scales = "free_y") +
scale_fill_manual(values = c("Financial Crisis" = "blue", "COVID-19" = "green")) +
labs(title = "Lag-1 Daily Returns",
subtitle = paste(group_syms, collapse = ", "),
y = "Return", x = "Date", fill = "Recession") +
theme_minimal(base_size = 10)
})
# --- PAGE 2: TIME SERIES OF COMMODITY PRICES ---
commod_data <- returns_data %>%
filter(symbol %in% commodities)
plots2 <- commod_data %>%
ggplot(aes(x = date, y = close)) +
geom_line() +
facet_wrap(~symbol, ncol = 2, scales = "free_y") +
labs(title = "Commodity Prices (Oil, Coal ETF, Metals ETF)",
y = "Price", x = "Date") +
theme_minimal(base_size = 10)
# --- PAGE 3: CORRELATION HEATMAP ---
wide_returns <- returns_data %>%
filter(symbol %in% c(tickers, commodities)) %>%
select(date, symbol, log_return) %>%
pivot_wider(names_from = symbol, values_from = log_return)
cor_mat <- cor(wide_returns %>% select(-date), use = "pairwise.complete.obs")
plot3 <- ggcorrplot(cor_mat, lab = TRUE, title = "Correlation: Shipping vs Commodities")
# --- PAGE 4: SIMULATED SHIPPING INDICES (BDI & Harpex) ---
set.seed(2025)
shipping_index <- tibble(
date = seq(as.Date("2005-01-01"), as.Date("2025-01-01"), by = "week"),
BDI = cumsum(rnorm(length(date), 0, 10)) + 1500,
Harpex = cumsum(rnorm(length(date), 0, 5)) + 1000
) %>%
pivot_longer(-date, names_to = "index", values_to = "value")
plot4 <- shipping_index %>%
ggplot(aes(x = date, y = value)) +
geom_line() +
facet_wrap(~index, ncol = 2, scales = "free_y") +
labs(title = "Simulated Baltic Dry Index & Harpex",
y = "Index Value", x = "Date") +
theme_minimal()
# --- PAGE 5: 30-DAY ROLLING VOLATILITY ---
vol_data <- returns_data %>%
filter(symbol %in% tickers) %>%
group_by(symbol) %>%
arrange(date) %>%
mutate(roll_vol = rollapply(log_return, width = 30, FUN = sd, fill = NA, align = "right")) %>%
ungroup()
plot5 <- vol_data %>%
ggplot(aes(x = date, y = roll_vol)) +
geom_line() +
facet_wrap(~symbol, ncol = 2, scales = "free_y") +
labs(title = "30-Day Rolling Volatility (Log Returns)",
y = "Volatility", x = "Date") +
theme_minimal()
# --- PAGE 6: RISK-RETURN SCATTERPLOT ---
scatter_data <- returns_data %>%
filter(symbol %in% tickers) %>%
group_by(symbol) %>%
summarise(mean_return = mean(log_return, na.rm = TRUE),
sd_return = sd(log_return, na.rm = TRUE))
plot6 <- ggplot(scatter_data, aes(x = sd_return, y = mean_return, label = symbol)) +
geom_point(color = "steelblue", size = 3) +
geom_text(nudge_y = 0.0005) +
labs(title = "Risk vs Return (Log Returns)",
x = "Standard Deviation (Risk)",
y = "Mean Log Return") +
theme_minimal()
# --- EXPORT 6-PAGE PDF ---
if (!dir.exists("plots")) dir.create("plots")
pdf("plots/bpc_shipping_mega_report.pdf", width = 11, height = 8.5)
walk(plots1, print)       # Page 1: Returns
print(plots2)             # Page 2: Commodities
print(plot3)              # Page 3: Correlation heatmap
print(plot4)              # Page 4: Shipping indices
print(plot5)              # Page 5: Volatility
print(plot6)              # Page 6: Risk-return
dev.off()
cat("✅ Mega shipping report saved as: plots/bpc_shipping_mega_report.pdf\n")
